from aiogram import Router, types, F
from aiogram.filters import Command
from utils.telegram_helpers import safe_reply
from utils.ai_api import get_ai_response
from keyboards.reply import get_main_keyboard
from prompts import SYSTEM_PROMPT, expense_analysis_prompt, money_question_prompt

router = Router()

@router.message(Command("start"))
async def start(message: types.Message):
    welcome = (
        "–ü—Ä–∏–∫–∏–Ω—å, —è –ê–ª—å—Ñ–∏–Ω! –¢–≤–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –≥–æ–ø–Ω–∏–∫ –æ—Ç –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞ üí∏\n\n"
        "–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?\n"
        "‚Ä¢ –°–∫–∏–Ω—å —Ç—Ä–∞—Ç—É ‚Äî —Ä–∞–∑–±–µ—Ä—É –ø–æ –∫–æ—Å—Ç–æ—á–∫–∞–º\n"
        "‚Ä¢ –°–ø—Ä–æ—Å–∏ –ø—Ä–æ –¥–µ–Ω—å–≥–∏ ‚Äî –æ—Ç–≤–µ—á—É –±–µ–∑ –∑–∞–º–æ—Ä–æ—á–µ–∫\n"
        "‚Ä¢ –•–æ—á–µ—à—å –∫–æ–ø–∏—Ç—å? –õ–µ–≥–∫–æ! üí∞\n\n"
        "–î–∞–≤–∞–π –¥—Ä—É–∂–∏—Ç—å, –±—Ä–æ!"
    )
    await safe_reply(message, welcome, reply_markup=get_main_keyboard())

@router.message(F.text == "üìä –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞—Ç")
async def expense_analysis(message: types.Message):
    await safe_reply(message, "–ö–∏–¥–∞–π —Å–≤–æ—é —Ç—Ä–∞—Ç—É, –±—Ä–∞—Ç! –õ—é–±–æ–π —Ñ–æ—Ä–º–∞—Ç ‚Äî —è –≤—Å–µ —Å—ä–µ–º üçΩÔ∏è")

@router.message(F.text == "üéØ –¶–µ–ª–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π")
async def savings_goal(message: types.Message):
    await safe_reply(message, "–ß—ë –∫–æ–ø–∏–º? –ê–π—Ñ–æ–Ω? –¢–∞—á–∫—É? –î–æ–º–∏–∫ –≤ –°–æ—á–∏? –°–∫–∏–¥—ã–≤–∞–π —Ü–∏—Ñ—Ä—ã ‚Äî —Å–æ—Å—Ç–∞–≤–∏–º –ø–ª–∞–Ω! ‚ú®")

@router.message(lambda message: message.text and any(keyword in message.text.lower() for keyword in ["—Ç—Ä–∞—Ç", "–ø–æ—Ç—Ä–∞—Ç–∏–ª", "–∫—É–ø–∏–ª", "—Å—á–µ—Ç"]))
async def handle_expense(message: types.Message):
    prompt = expense_analysis_prompt(message.text)
    response = await get_ai_response(prompt, SYSTEM_PROMPT)
    await safe_reply(message, f"üîç –†–∞–∑–±–æ—Ä –ø–æ–ª—ë—Ç–æ–≤:\n\n{response}")

@router.message(lambda message: message.text and any(keyword in message.text.lower() for keyword in ["?","–ø–æ—á–µ–º—É","–∫–∞–∫","—Å—Ç–æ–∏—Ç","—ç–∫–æ–Ω–æ–º–∏"]))
async def handle_money_question(message: types.Message):
    prompt = money_question_prompt(message.text)
    response = await get_ai_response(prompt, SYSTEM_PROMPT)
    await safe_reply(message, f"üí° –ú–æ–π –≤–µ—Ä–¥–∏–∫—Ç:\n\n{response}")

@router.message()
async def generic_handler(message: types.Message):
    if message.text:
        response = await get_ai_response(message.text, SYSTEM_PROMPT)
        await safe_reply(message, response)
    else:
        await message.answer("–ë—Ä–∞—Ç–∞–Ω, —è –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –ø–æ–Ω–∏–º–∞—é üòÖ")