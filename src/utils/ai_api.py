import aiohttp
import json
import hashlib
import asyncio
from config import OPENROUTER_API_KEY, MODEL_NAME
from functools import lru_cache

OPENROUTER_URL = "https://openrouter.ai/api/v1/chat/completions"

async def get_ai_response(prompt: str, system_prompt: str) -> str:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç AI —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ –∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
    cache_key = f"{system_prompt[:50]}_{prompt[:100]}"
    cache_key = hashlib.md5(cache_key.encode()).hexdigest()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–µ—à–∞
    if cache_key in get_ai_response.cache:
        return get_ai_response.cache[cache_key]
    
    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json"
    }
    
    payload = {
        "model": MODEL_NAME,
        "messages": [
            {"role": "system", "content": system_prompt[:1500]},  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
            {"role": "user", "content": prompt[:1000]}            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
        ],
        "temperature": 0.7,
        "max_tokens": 600  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –æ—Ç–≤–µ—Ç–∞
    }
    
    try:
        async with aiohttp.ClientSession(timeout=aiohttp.ClientTimeout(total=30)) as session:
            async with session.post(OPENROUTER_URL, headers=headers, json=payload) as response:
                if response.status == 429:
                    return "‚ö†Ô∏è –£–ø—Å, —è —Å–µ–≥–æ–¥–Ω—è —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–¥–µ–ª–∞–ª! –ü–æ–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É, –±—Ä–∞—Ç!"
                
                if response.status != 200:
                    error = await response.text()
                    return f"üö´ –û—à–∏–±–∫–∞ {response.status}: {error[:200]}"
                
                data = await response.json()
                response_text = data['choices'][0]['message']['content']
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–µ—à
                get_ai_response.cache[cache_key] = response_text
                return response_text
    
    except asyncio.TimeoutError:
        return "‚è≥ –°–µ—Ä–≤–µ—Ä –¥–æ–ª–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ!"
    except Exception as e:
        return f"üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–µ—à
get_ai_response.cache = {}